---
apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: otel-agent
spec: {}
status: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.octohelm.tech/name: kube-state-metrics
  name: kube-state-metrics
  namespace: otel-agent
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: null
  labels:
    app.octohelm.tech/name: kube-state-metrics
  name: kube-state-metrics
  namespace: otel-agent
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    app.octohelm.tech/name: kube-state-metrics
  name: kube-state-metrics
  namespace: otel-agent
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  - nodes
  - pods
  - services
  - serviceaccounts
  - resourcequotas
  - replicationcontrollers
  - limitranges
  - persistentvolumeclaims
  - persistentvolumes
  - namespaces
  - endpoints
  verbs:
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets
  - daemonsets
  - deployments
  - replicasets
  verbs:
  - list
  - watch
- apiGroups:
  - batch
  resources:
  - cronjobs
  - jobs
  verbs:
  - list
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - list
  - watch
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  - volumeattachments
  verbs:
  - list
  - watch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs:
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  - ingressclasses
  - ingresses
  verbs:
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - list
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  - rolebindings
  - roles
  verbs:
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  labels:
    app.octohelm.tech/name: kube-state-metrics
  name: kube-state-metrics
  namespace: otel-agent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-state-metrics
subjects:
- kind: ServiceAccount
  name: kube-state-metrics
  namespace: otel-agent
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    reload.octohelm.tech/configmap: kube-state-metrics
  creationTimestamp: null
  labels:
    app.octohelm.tech/name: kube-state-metrics
  name: kube-state-metrics
  namespace: otel-agent
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kube-state-metrics
  strategy: {}
  template:
    metadata:
      annotations:
        hash.configmap.octohelm.tech/kube-state-metrics: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
        reload.octohelm.tech/configmap: kube-state-metrics
      creationTimestamp: null
      labels:
        app: kube-state-metrics
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
      containers:
      - envFrom:
        - configMapRef:
            name: kube-state-metrics
        image:  docker.io/bitnami/kube-state-metrics:2.9.2
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
        name: kube-state-metrics
        ports:
        - containerPort: 8080
          name: tcp-metrics
          protocol: TCP
        - containerPort: 8081
          name: telemetry
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
        resources: {}
      serviceAccountName: kube-state-metrics
status: {}

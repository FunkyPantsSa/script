---
apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: otel
spec: {}
status: {}
---
apiVersion: v1
data:
  default: http://loki
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.octohelm.tech/name: loki
  name: endpoint-loki
  namespace: otel
---
apiVersion: v1
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.octohelm.tech/name: loki
  name: loki
  namespace: otel
---
apiVersion: v1
data:
  loki.yaml: |
    auth_enabled: false
    chunk_store_config:
      max_look_back_period: 168h
    compactor:
      shared_store: filesystem
      working_directory: /var/loki/boltdb-shipper-compactor
    ingester:
      chunk_block_size: 262144
      chunk_idle_period: 3m
      chunk_retain_period: 1m
      lifecycler:
        ring:
          kvstore:
            store: inmemory
          replication_factor: 1
      max_transfer_retries: 0
      wal:
        dir: /var/loki/wal
    limits_config:
      enforce_metric_name: false
      reject_old_samples: true
      reject_old_samples_max_age: 168h
    schema_config:
      configs:
        - from: "2020-10-24"
          index:
            period: 24h
            prefix: index_
          object_store: filesystem
          schema: v11
          store: boltdb-shipper
    server:
      http_listen_port: 3100
    storage_config:
      boltdb_shipper:
        active_index_directory: /var/loki/boltdb-shipper-active
        cache_location: /var/loki/boltdb-shipper-cache
        cache_ttl: 24h
        shared_store: filesystem
      filesystem:
        directory: /var/loki/chunks
    table_manager:
      retention_deletes_enabled: true
      retention_period: 168h
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    app.octohelm.tech/name: loki
  name: loki-config
  namespace: otel
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    app.octohelm.tech/name: loki
  name: loki-storage
  namespace: otel
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
  storageClassName: local-path
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app.octohelm.tech/name: loki
  name: loki
  namespace: otel
spec:
  ports:
  - name: http-loki
    port: 3100
    protocol: TCP
    targetPort: http-loki
  selector:
    app: loki
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    reload.octohelm.tech/configmap: loki-config,loki
  creationTimestamp: null
  labels:
    app.octohelm.tech/name: loki
  name: loki
  namespace: otel
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loki
  serviceName: loki-headless
  template:
    metadata:
      annotations:
        hash.configmap.octohelm.tech/loki: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
        hash.configmap.octohelm.tech/loki-config: 3198c9021a674222b72ce3f2b474811d12ed5985b8b8abec3ae5c21c6f211ded
        reload.octohelm.tech/configmap: loki-config,loki
      creationTimestamp: null
      labels:
        app: loki
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
      containers:
      - args:
        - -config.file=/conf/loki/loki.yaml
        envFrom:
        - configMapRef:
            name: loki
        image:  docker.io/grafana/loki:2.8.2
        name: loki
        ports:
        - containerPort: 3100
          name: http-loki
          protocol: TCP
        resources: {}
        volumeMounts:
        - mountPath: /conf/loki/loki.yaml
          name: loki-config
          subPath: loki.yaml
        - mountPath: /var/loki
          name: loki-storage
      volumes:
      - configMap:
          name: loki-config
        name: loki-config
      - name: loki-storage
        persistentVolumeClaim:
          claimName: loki-storage
  updateStrategy: {}
status:
  availableReplicas: 0
  replicas: 0
